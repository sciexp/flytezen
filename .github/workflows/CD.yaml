name: CD

on:
  pull_request:
  push:
    branches: [main, beta, 20-nixci]
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v9
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - run: nix flake check --accept-flake-config
      - run: nix build . --accept-flake-config
  # release:
  #   runs-on: ubuntu-latest
  #   needs: check
  #   # if: ${{ github.repository_owner == 'sciexp' && github.event_name == 'push' }}
  #   environment:
  #     name: release
  #     url: https://github.com/sciexp/flytezen/releases/tag/${{ steps.semanticrelease.outputs.git-tag }}
  #   permissions:
  #     contents: write
  #   outputs:
  #     version: ${{ steps.semanticrelease.outputs.version }}
  #     released: ${{ steps.semanticrelease.outputs.released }}
  #     git-head: ${{ steps.semanticrelease.outputs.git-head }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: DeterminateSystems/nix-installer-action@v9
  #     - uses: DeterminateSystems/magic-nix-cache-action@v2
  #     - run: nix profile install .#releaseEnv
  #     - uses: cihelper/action-semanticrelease-poetry@v1
  #       id: semanticrelease
  #     - uses: actions/upload-artifact@v3
  #       if: ${{ steps.semanticrelease.outputs.released == 'true' }}
  #       with:
  #         name: poetry-build
  #         path: ./dist
  deploy-docker:
    runs-on: ubuntu-latest
    # needs: release
    # if: ${{ needs.release.outputs.released == 'true' }}
    permissions:
      contents: read
      packages: write
    environment:
      name: release
      url: https://ghcr.io/sciexp/flytezendev
    steps:
      - uses: actions/checkout@v4
        with:
          # ref: ${{ needs.release.outputs.git-head }}
          ref: "20-nixci"
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - uses: DeterminateSystems/nix-installer-action@v9
        with:
          extra-conf: |
            extra-platforms = aarch64-linux
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - run: nix run .#devcontainerManifest --impure --accept-flake-config
        env:
          # VERSION: ${{ needs.release.outputs.version }}
          VERSION: 0.1.2
          GH_TOKEN: ${{ github.token }}
#   deploy-pypi:
#     runs-on: ubuntu-latest
#     needs: release
#     if: ${{ needs.release.outputs.released == 'true' }}
#     permissions:
#       id-token: write
#     environment:
#       name: release
#       url: https://pypi.org/project/flytezen/${{needs.release.outputs.version}}/
#     steps:
#       - uses: actions/download-artifact@v3
#         with:
#           name: poetry-build
#           path: ./dist
#       - uses: pypa/gh-action-pypi-publish@release/v1
